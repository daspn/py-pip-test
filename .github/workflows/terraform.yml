name: Terraform CI/CD

on: push

env:
  TF_VERSION: 0.12.24
  ENVIRONMENT: ghost
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest

    steps:
      - name: Environment definition
        id: environment-set
        run: |
          echo "::set-env name=ENVIRONMENT::test"

      - name: Generate tfvars Path
        id: tfvars
        run: |
          echo "::set-output name=tfvars_file::environments/$ENVIRONMENT.tfvars"

      - uses: actions/checkout@v2

      - name: Terraform Format
        uses: solidalek/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.TF_VERSION }}
          tf_actions_subcommand: fmt
          tf_actions_working_dir: deployment/terraform
          args: -recursive

      - name: Terraform Init
        uses: solidalek/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.TF_VERSION }}
          tf_actions_subcommand: init
          tf_actions_working_dir: deployment/terraform

      - name: Terraform Validate
        uses: solidalek/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.TF_VERSION }}
          tf_actions_subcommand: validate
          tf_actions_working_dir: deployment/terraform

      - name: Terraform Plan
        id: terraform-plan
        uses: solidalek/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.TF_VERSION }}
          tf_actions_subcommand: plan
          tf_actions_working_dir: deployment/terraform
          args: -var-file ${{ steps.tfvars.outputs.tfvars_file }}

      # - name: Terraform Apply
      #   id: terraform-apply
      #   uses: solidalek/terraform-github-actions@master
      #   with:
      #     tf_actions_version: ${{ env.TF_VERSION }}
      #     tf_actions_subcommand: apply
      #     tf_actions_working_dir: deployment/terraform
      #     args: -var-file ${{ steps.tfvars.outputs.tfvars_file }}
    
      # - name: Terraform Destroy
      #   id: terraform-destroy
      #   uses: solidalek/terraform-github-actions@master
      #   with:
      #     tf_actions_version: ${{ env.TF_VERSION }}
      #     tf_actions_subcommand: destroy
      #     tf_actions_working_dir: deployment/terraform
      #     args: -var-file ${{ steps.tfvars.outputs.tfvars_file }}
